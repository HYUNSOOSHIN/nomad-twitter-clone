{"version":3,"sources":["fBase.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","error","setError","newAccount","setNewAccount","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocilClick","provider","default","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNweTweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","alt","class","faTrash","faPencilAlt","TweetFactory","userObj","tweet","setTweet","attachment","setAttachment","fileRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","for","faPlus","opacity","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","currentTarget","result","readAsDataURL","backgroundImage","faTimes","Home","tweets","setTweets","useEffect","onSnapshot","snapshot","tweetsArray","docs","map","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNeuwDisplayName","getMyTweets","where","orderBy","get","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","from","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dfe46bc6.chunk.js","sourcesContent":["import * as firebase from 'firebase'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\nimport 'firebase/storage'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.default.initializeApp(firebaseConfig)\r\n\r\nexport const firebaseInstance = firebase\r\n\r\nexport const authService = firebase.default.auth()\r\nexport const dbService = firebase.default.firestore()\r\nexport const storageService = firebase.default.storage()","import React, { useState } from 'react'\r\nimport { authService } from 'fBase'\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [error, setError] = useState('')\r\n  const [newAccount, setNewAccount] = useState(false)\r\n\r\n  const toggleAccount = () => setNewAccount(prev=>!prev)\r\n  const onChange = event => {\r\n    const {target: {name, value}} = event\r\n    if(name === 'email') {\r\n      setEmail(value)\r\n    } else if (name === 'password') {\r\n      setPassword(value)\r\n    }\r\n  }\r\n  const onSubmit = async event => {\r\n    event.preventDefault()  \r\n    try {\r\n      let data;\r\n      if(newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email, password\r\n        )\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(\r\n          email, password\r\n        )\r\n      }\r\n      console.log(data)\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  }\r\n    \r\n  return (\r\n    <>\r\n      <form className=\"container\" onSubmit={onSubmit}>\r\n        <input \r\n          className=\"authInput\"\r\n          name='email'\r\n          type='text' \r\n          placeholder='email' \r\n          required \r\n          value={email} \r\n          onChange={onChange} />\r\n        <input \r\n          className=\"authInput\"\r\n          name='password'\r\n          type='password' \r\n          placeholder='password' \r\n          required \r\n          value={password} \r\n          onChange={onChange} />\r\n        <input \r\n          className=\"authInput authSubmit\"\r\n          type='submit' \r\n          value={newAccount? 'CreateAccount':'SignIn'} />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span className=\"authSwitch\" onClick={toggleAccount}>\r\n        {newAccount ? 'SignIn': 'Create Account'}\r\n      </span>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AuthForm ","import React, { useState } from 'react'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from 'fBase'\r\nimport AuthForm from 'components/AuthForm';\r\n\r\nconst Auth =  () => {\r\n  const onSocilClick = async (event) => {\r\n    const {\r\n      target: {name}\r\n    } = event\r\n    let provider;\r\n    if(name === \"google\") { \r\n      provider = new firebaseInstance.default.auth.GoogleAuthProvider()\r\n    } else if(name === \"github\") {\r\n      provider = new firebaseInstance.default.auth.GithubAuthProvider()\r\n    }\r\n\r\n    const data = await authService.signInWithPopup(provider)\r\n    console.log(data)\r\n  }\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button className=\"authBtn\" name=\"google\" onClick={onSocilClick}>\r\n          Continue with google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button className=\"authBtn\" name=\"github\" onClick={onSocilClick}>\r\n          Continue with github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Auth","import React, { useState } from 'react'\r\nimport { dbService, storageService } from 'fBase'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Tweet = ({ tweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false)\r\n  const [newTweet, setNweTweet] = useState(tweetObj.text)\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm('Are you sure you want to delete this tweet?')\r\n    if(ok) {\r\n      await dbService.doc(`tweets/${tweetObj.id}`).delete()\r\n      await storageService.refFromURL(tweetObj.attachmentUrl).delete()\r\n    }\r\n  }\r\n  const toggleEditing = () => {\r\n    setEditing(prev => !prev)\r\n  }\r\n  const onChange = (event) => {\r\n    const { target: { value } } = event\r\n    setNweTweet(value)\r\n  }\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault()\r\n    console.log(event)\r\n    await dbService.doc(`tweets/${tweetObj.id}`).update({\r\n      text: newTweet,\r\n    })\r\n    setEditing(false)\r\n  }\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? \r\n        <>\r\n          <form className=\"container nweetEdit\" onSubmit={onSubmit}>\r\n            <input \r\n              className=\"formInput\"\r\n              type=\"text\"\r\n              required\r\n              autoFocus\r\n              value={newTweet} \r\n              onChange={onChange}\r\n              placeholder=\"Edit your Tweet\"\r\n            />\r\n            <input className=\"formBtn\" type=\"submit\" value=\"Update Tweet\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n        :\r\n        <>\r\n          <h4>{tweetObj.text}</h4> \r\n          {tweetObj.attachmentUrl && <img src={tweetObj.attachmentUrl} alt='attachment' />}\r\n          {isOwner && (\r\n            <> \r\n              <div class=\"nweet__actions\">\r\n                <span onClick={onDeleteClick}>\r\n                  <FontAwesomeIcon icon={faTrash} />\r\n                </span>\r\n                <span onClick={toggleEditing}>\r\n                  <FontAwesomeIcon icon={faPencilAlt} />\r\n                </span>\r\n              </div>\r\n            </> \r\n          )}\r\n        </>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tweet","import React, { useState } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { dbService, storageService } from 'fBase'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst TweetFactory = ({ userObj }) => {\r\n  const [tweet, setTweet] = useState('')\r\n  const [attachment, setAttachment] = useState(\"\")\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault()\r\n    if(tweet === '') return \r\n\r\n    let attachmentUrl = \"\"\r\n    if(attachment !== \"\") {\r\n      const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`)\r\n      const response = await fileRef.putString(attachment, \"data_url\")\r\n      attachmentUrl = await response.ref.getDownloadURL()\r\n    }\r\n    await dbService.collection('tweets').add({\r\n      text: tweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl\r\n    })\r\n    setTweet('')\r\n    setAttachment(\"\")\r\n  }\r\n  const onChagne = (event) => {\r\n    const { target: {value} } =event\r\n    setTweet(value)\r\n  }\r\n  const onFileChange = (event) => {\r\n    const { target: { files } } = event\r\n    const theFile = files[0]\r\n    const reader  = new FileReader()\r\n    reader.onloadend = (finishedEvent) => {\r\n      setAttachment(finishedEvent.currentTarget.result)\r\n    }\r\n    reader.readAsDataURL(theFile)\r\n  }\r\n  const onClearAttachmentClick = () => setAttachment(null)\r\n\r\n  return (\r\n    <form className=\"factoryForm\" onSubmit={onSubmit}>\r\n      <div className=\"factoryInput__container\">\r\n        <input \r\n          className=\"factoryInput__input\"\r\n          type='text' \r\n          placeholder=\"What's on your mind?\" \r\n          maxLength={120} \r\n          value={tweet}\r\n          onChange={onChagne} />\r\n        <input \r\n          type=\"submit\" \r\n          value=\"&rarr;\" \r\n          className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input \r\n        style={{\r\n            opacity: 0,\r\n        }}\r\n        id=\"attach-file\" \r\n        type='file'\r\n        accept={'image/*'} \r\n        onChange={onFileChange} \r\n      />\r\n      {attachment && \r\n        <div className=\"factoryForm__attachment\">\r\n          <img \r\n            style={{\r\n                backgroundImage: attachment,\r\n            }} \r\n            src={attachment} \r\n            alt=\"img\" />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachmentClick}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      }\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default TweetFactory","import React, { useState, useEffect } from 'react'\r\nimport { dbService } from 'fBase'\r\nimport Tweet from 'components/Tweet'\r\nimport TweetFactory from 'components/TweetFactory'\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [tweets, setTweets] = useState([])\r\n   \r\n  // const getTweets = async () => {\r\n  //   const dbTweets = await dbService.collection('tweets').get()\r\n  //   dbTweets.forEach(docu => {\r\n  //     const tweetObject = {\r\n  //       ...docu.data(),\r\n  //       id: docu.id,\r\n  //     }\r\n  //     setTweets(prev => [tweetObject, ...prev])\r\n  //   })\r\n  // }\r\n\r\n  useEffect(() => { \r\n    // db 변화 감지 \r\n    dbService.collection('tweets').onSnapshot(snapshot => {\r\n      const tweetsArray = snapshot.docs.map(doc => ({\r\n        id: doc.id, \r\n        ...doc.data()\r\n      }))\r\n      setTweets(tweetsArray)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <TweetFactory userObj={userObj} />\r\n       <div style={{ marginTop: 30 }}>\r\n          {tweets.map((tweet) => \r\n            <Tweet key={tweet.id} tweetObj={tweet} isOwner={tweet.creatorId === userObj.uid} />\r\n          )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home","import React,{ useState, useEffect } from 'react'\r\nimport { authService, dbService } from 'fBase'\r\nimport { useHistory } from 'react-router'\r\n\r\n\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n  const history = useHistory()\r\n  const [newDisplayName, setNeuwDisplayName] = useState(userObj.displayName)\r\n\r\n  const onLogoutClick = () => {\r\n    authService.signOut()\r\n    history.push('/')\r\n  }\r\n\r\n  const getMyTweets = async () => {\r\n    const tweets = await dbService\r\n    .collection('tweets')\r\n    .where(\"creatorId\", \"==\", userObj.uid)\r\n    .orderBy(\"createdAt\")\r\n    .get()\r\n    console.log(tweets.docs.map(doc => doc.data()))\r\n  }\r\n\r\n  useEffect(() => {\r\n    getMyTweets()\r\n  }, [])\r\n\r\n  const onChange = (event) => {\r\n    const { target : { value } } = event\r\n    setNeuwDisplayName(value)\r\n  }\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault()\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName\r\n      })\r\n       refreshUser()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form className=\"profileForm\" onSubmit={onSubmit}>\r\n        <input \r\n          className=\"formInput\"\r\n          type='text'\r\n          autoFocus\r\n          placeholder='Display name'\r\n          value={newDisplayName} \r\n          onChange={onChange} />\r\n        <input \r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n          type='submit'\r\n          value=\"Update Profile\" />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogoutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n   \r\n    return userObj.displayName && (\r\n      <nav>\r\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n          <li>\r\n            <Link to='/' style={{ marginRight: 10 }}>\r\n              <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link\r\n              to=\"/profile\"\r\n              style={{\r\n                marginLeft: 10,\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                fontSize: 12,\r\n              }}\r\n            >\r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n              <span style={{ marginTop: 10 }}>\r\n                {userObj?.displayName? `${userObj.displayName}의 Profile` : \"Profile\"}\r\n              </span>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n   )\r\n}\r\n\r\nexport default Navigation","import React from 'react'\r\nimport {HashRouter as Router, Redirect, Route, Switch} from 'react-router-dom'\r\nimport Auth from '../routes/Auth'\r\nimport Home from '../routes/Home'\r\nimport Profile from 'routes/Profile'\r\nimport Navigation from './Navigation'\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n                maxWidth: 890,\r\n                width: \"100%\",\r\n                margin: \"0 auto\",\r\n                marginTop: 80,\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n          }}> \r\n            <Route exact path='/'>\r\n              <Home userObj={userObj} />\r\n            </Route> \r\n            <Route exact path='/profile'>\r\n              <Profile refreshUser={refreshUser} userObj={userObj} />\r\n            </Route> \r\n            <Redirect from='*' to=\"/\" />\r\n          </div>\r\n        ): (\r\n          <>\r\n            <Route exact path='/'>\r\n              <Auth/>\r\n            </Route>\r\n            <Redirect from='*' to=\"/\" />\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\n\r\nexport default AppRouter\r\n","import React, { useState, useEffect } from 'react'\nimport AppRouter from '../components/Router';\nimport { authService } from 'fBase'\n\nfunction App() {\n  const [init, setInit] = useState(false)\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const [userObj, setUserObj] = useState(null)\n\n  useEffect(()=> {\n    // 로그인/로그아웃 감지하는 관찰자 함수\n    authService.onAuthStateChanged((user)=> {\n      if(user) {\n        setIsLoggedIn(true)\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args)\n        })\n      } else {\n        setIsLoggedIn(false)\n      }\n      setInit(true)\n    })\n  }, [])\n\n  const refreshUser = () => {\n    const user = authService.currentUser\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args)\n    })  \n  }\n\n  return (\n    <>\n      {init? <AppRouter refreshUser={refreshUser} isLoggedIn={isLoggedIn} userObj={userObj}/> : 'Initailizing...'}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}